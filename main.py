import os
import asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters
)

# üîπ –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ Environment Variables (Render)
TOKEN = os.getenv("TELEGRAM_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))
GROUP_ID = int(os.getenv("GROUP_ID"))

# üîπ –û–±—Ä–æ–±–Ω–∏–∫ –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É –≥—Ä—É–ø—ñ
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    text = update.message.text

    # 1Ô∏è‚É£ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∞–¥–º—ñ–Ω—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü—ñ—ó
    keyboard = InlineKeyboardMarkup([
        [
            InlineKeyboardButton("‚úÖ –°—Ö–≤–∞–ª–∏—Ç–∏", callback_data=f"approve|{user.id}|{text}"),
            InlineKeyboardButton("‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏", callback_data="reject")
        ]
    ])
    await context.bot.send_message(
        chat_id=ADMIN_ID,
        text=f"–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ @{user.username or user.first_name}:\n\n{text}",
        reply_markup=keyboard
    )

    # 2Ô∏è‚É£ –í–∏–¥–∞–ª–∏—Ç–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≥—Ä—É–ø–∏
    await update.message.delete()

    # 3Ô∏è‚É£ –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –º–æ–¥–µ—Ä–∞—Ü—ñ—é
    reply = await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=f"@{user.username or user.first_name}, –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—É–ª–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü—ñ—é ‚úÖ"
    )

    # 4Ô∏è‚É£ –ó–∞—á–µ–∫–∞—Ç–∏ 5 —Å–µ–∫—É–Ω–¥ —ñ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    await asyncio.sleep(5)
    await reply.delete()

# üîπ –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ (–º–æ–¥–µ—Ä–∞—Ü—ñ—è)
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    data = query.data.split("|")
    action = data[0]

    if action == "approve":
        user_id = data[1]
        text = data[2]
        # –ü—É–±–ª—ñ–∫—É—î–º–æ —Å—Ö–≤–∞–ª–µ–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–∑–∞–¥ —É –≥—Ä—É–ø—É
        await context.bot.send_message(chat_id=GROUP_ID, text=text)
        await query.edit_message_text("‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å—Ö–≤–∞–ª–µ–Ω–µ –π –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–µ.")
    elif action == "reject":
        await query.edit_message_text("‚ùå –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥—Ö–∏–ª–µ–Ω–µ.")

# üîπ –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞—Å—Ç–æ—Å—É–Ω–æ–∫
app = ApplicationBuilder().token(TOKEN).build()

# üîπ –†–µ—î—Å—Ç—Ä—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))
app.add_handler(CallbackQueryHandler(button_callback))

# üîπ –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
app.run_polling()
